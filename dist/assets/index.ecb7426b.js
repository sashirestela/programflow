var Ie=Object.defineProperty;var we=(a,e,t)=>e in a?Ie(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var n=(a,e,t)=>(we(a,typeof e!="symbol"?e+"":e,t),t),Ae=(a,e,t)=>{if(!e.has(a))throw TypeError("Cannot "+t)};var ne=(a,e,t)=>{if(e.has(a))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(a):e.set(a,t)};var W=(a,e,t)=>(Ae(a,e,"access private method"),t);import{G as xe,P as ke,R as E,L as V,i as Le}from"./vendor.1d56c6fc.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const u of o.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&r(u)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();const ie=Le,I=new xe({},{cellNamespace:ie}),Se=new ke({el:window.document.getElementById("myholder"),model:I,width:600,height:300,gridSize:10,drawGrid:!0,background:{color:"rgba(0, 255, 0, 0.3)"},cellViewNamespace:ie});Se.setGridSize(10);const F=new E;F.position(100,30);F.resize(100,40);F.attr({body:{fill:"blue"},label:{text:"Hello",fill:"white"}});F.addTo(I);const j=new E;j.position(400,30);j.resize(100,40);j.attr({body:{fill:"#2C3E50",rx:5,ry:5,strokeWidth:2},label:{text:"World!",fill:"#3498DB",fontSize:18,fontWeight:"bold",fontVariant:"small-caps"}});j.addTo(I);const _=new V;_.source(F);_.target(j);_.addTo(I);const N=new E;N.position(100,130);N.resize(100,40);N.attr({body:{fill:"#E74C3C",rx:20,ry:20,strokeWidth:0},label:{text:"Hello",fill:"#ECF0F1",fontSize:11,fontVariant:"small-caps"}});N.addTo(I);const D=new E;D.position(400,130);D.resize(100,40);D.attr({body:{fill:"#8E44AD",strokeWidth:0},label:{text:"World!",fill:"white",fontSize:13}});D.addTo(I);const ee=new V;ee.source(N);ee.target(D);ee.addTo(I);const z=new E;z.position(100,230);z.resize(100,40);z.attr({body:{fill:"#2ECC71",strokeDasharray:"10,2"},label:{text:"Hello",fill:"black",fontSize:13}});z.addTo(I);const P=new E;P.position(400,230);P.resize(100,40);P.attr({body:{fill:"#F39C12",rx:20,ry:20,strokeDasharray:"1,1"},label:{text:"World!",fill:"gray",fontSize:18,fontWeight:"bold",fontVariant:"small-caps",textShadow:"1px 1px 1px black"}});P.addTo(I);const te=new V;te.source(z);te.target(P);te.addTo(I);let Q;try{Q=require("crypto")}catch{Q=window.crypto}class d{static classFromObject(e){if(typeof e!="object")throw new TypeError("Invalid argument type ('object' was expected).");return Object.getPrototypeOf(e).constructor.name}static classFromClass(e){if(typeof e!="function")throw new TypeError("Invalid argument type ('class' was expected).");return e.prototype.constructor.name}static uuid(){return Q.randomUUID()}static pipeRevivers(...e){return e.reduce((t,r)=>(i,o)=>r(i,t(i,o)))}}var T,Y;class s{static checkArgumentType(e,t,r,i=!1,o=!1){i?(W(this,T,Y).call(this,e,t,Array),e.forEach(u=>{(!o||u!==null)&&W(this,T,Y).call(this,u,t,r)})):W(this,T,Y).call(this,e,t,r)}static checkArgumentTypeIfExists(e,t,r,i=!1,o=!1){e!=null&&this.checkArgumentType(e,t,r,i,o)}static checkArgumentCardinality(e,t,r){if(t===void 0||r===void 0)throw new TypeError("Missing arguments 'parameterName' or 'expectedCardinality'.");if(r.number===c.Zero.number){if(e!=null){if(typeof e!="object")throw new M(t,r);if(Object.keys(e).length>0)throw new M(t,r)}}else{if(e==null)throw new M(t,r);if(Array.isArray(e)&&!c.isValid(e.length,r))throw new M(t,r)}}static checkGeneralCondition(e,t){if(!e)throw new be(t)}static get ARRAY(){return!0}static get ALLOWNULLS(){return!0}}T=new WeakSet,Y=function(e,t,r){if(t===void 0||r===void 0)throw new TypeError("Missing arguments 'parameterName' or 'expectedType'.");if(typeof r=="function"||typeof r=="object"){if(!(e instanceof r&&(d.classFromObject(e)==="Object"||d.classFromClass(r)!=="Object")))throw new re(t,d.classFromClass(r))}else if(typeof e!==r)throw new re(t,r)},ne(s,T);class re extends TypeError{constructor(e,t){const r=`Missing argument or wrong type for the parameter '${e}'. The expected type is '${t}'.`;super(r)}}class M extends TypeError{constructor(e,t){const r=`Wrong cardinality for the parameter '${e}'. The expected cardinality is '${t.text}'.`;super(r)}}class ae extends TypeError{}class be extends Error{}const k=class{constructor(e,t){n(this,"number");n(this,"text");this.number=e,this.text=t}static isValid(e,t){return Number.isInteger(t.number)?e===t.number:e>t.number}};let c=k;n(c,"Zero",new k(0,"none value")),n(c,"AtLeastOne",new k(.5,"at least one value")),n(c,"One",new k(1,"exactly one value")),n(c,"AtLeastTwo",new k(1.5,"at least two values")),n(c,"Two",new k(2,"exactly two values"));const se=class{constructor(e){n(this,"className",d.classFromObject(this));s.checkArgumentType(e,"obj",Object),Object.assign(this,e)}static categoriesOf(e){return e=e!=null?e:"DataType",se.categories.filter(t=>t.parentType===e).map(t=>t.name)}static create(e,t,r){const i=w.find(t);switch(e){case"Primitive":return i;case"List":return new O({element:i});case"Matrix":return new Z({innerElement:i});case"Map":{const o=w.find(r);return new B({key:i,value:o})}default:throw new ae(`Category '${e}' does not exist.`)}}static reviver(e,t){if(t===null||t.className===null)return t;switch(t.className){case"Primitive":return new w(t);case"List":return new O(t);case"Matrix":return new Z(t);case"Map":return new B(t);default:return t}}};let l=se;n(l,"categories",[]);const y=class extends l{constructor(t){super(t);n(this,"type");s.checkArgumentType(t.type,"obj.type","string"),Object.assign(this,t)}static list(){return Object.values(y).map(t=>t.type)}static find(t){const r=Object.entries(y).find(i=>i[0]===t);if(r!==void 0)return r[1];throw new ae(`Type '${t}' does not exist.`)}};let w=y;(()=>{l.categories.push({name:y.name,parentType:Object.getPrototypeOf(y).name})})(),n(w,"Boolean",new y({type:"Boolean"})),n(w,"String",new y({type:"String"})),n(w,"Integer",new y({type:"Integer"})),n(w,"Real",new y({type:"Real"}));const G=class extends l{};let R=G;(()=>{l.categories.push({name:G.name,parentType:Object.getPrototypeOf(G).name})})();const $=class extends R{constructor(t){super(t);n(this,"element");s.checkArgumentType(t.element,"obj.element",l),Object.assign(this,t)}};let O=$;(()=>{l.categories.push({name:$.name,parentType:Object.getPrototypeOf($).name})})();const J=class extends R{constructor(t){var r;super(t);n(this,"innerElement");n(this,"element");s.checkArgumentType(t.innerElement,"obj.innerElement",l),Object.assign(this,t),this.element=(r=t.element)!=null?r:new O({element:this.innerElement})}};let Z=J;(()=>{l.categories.push({name:J.name,parentType:Object.getPrototypeOf(J).name})})();const U=class extends R{constructor(t){super(t);n(this,"key");n(this,"value");s.checkArgumentType(t.key,"obj.key",l),s.checkArgumentType(t.value,"obj.value",l),Object.assign(this,t)}};let B=U;(()=>{l.categories.push({name:U.name,parentType:Object.getPrototypeOf(U).name})})();class H{constructor(e){n(this,"id",d.uuid());n(this,"className",d.classFromObject(this));n(this,"name",null);n(this,"dataType",null);s.checkArgumentType(e,"obj",Object),s.checkArgumentType(e.name,"obj.name","string"),s.checkArgumentTypeIfExists(e.dataType,"obj.dataType",l),Object.assign(this,e)}static reviver(e,t){switch(t.className){case"Variable":return new ce(t);case"Function":return new X(t);default:return t}}static parse(e){return JSON.parse(e,d.pipeRevivers(l.reviver,H.reviver))}}class ce extends H{constructor(e){super(e),s.checkArgumentCardinality(e.dataType,"obj.dataType",c.One)}}class X extends H{constructor(t){super(t);n(this,"paramIdList",[]);n(this,"startStatementId",null);n(this,"scopeId",null);n(this,"isMain",!1);s.checkArgumentTypeIfExists(t.paramIdList,"obj.paramIdList","string",s.ARRAY),s.checkArgumentType(t.startStatementId,"obj.startStatementId","string"),s.checkArgumentType(t.scopeId,"obj.scopeId","string"),s.checkArgumentTypeIfExists(t.isMain,"obj.isMain","boolean"),Object.assign(this,t)}static get MAIN(){return!0}}class b{constructor(e){n(this,"id",d.uuid());n(this,"scopeType",null);n(this,"parentScopeId",null);n(this,"symbolMap",{});s.checkArgumentType(e,"obj",Object),s.checkArgumentType(e.scopeType,"obj.scopeType",m),s.checkArgumentTypeIfExists(e.parentScopeId,"obj.parentScopeId","string"),Object.assign(this,e)}static reviver(e,t){return t!==null&&t.scopeType!==void 0?new b(t):t}static parse(e){return JSON.parse(e,d.pipeRevivers(m.reviver,b.reviver))}}const A=class{constructor(e){n(this,"type");this.type=e}static reviver(e,t){return e==="scopeType"?new A(t.type):t}static list(){return Object.values(A)}};let m=A;n(m,"Application",new A("Application")),n(m,"Function",new A("Function")),n(m,"CompoundLoop",new A("CompoundLoop")),n(m,"CompoundFork",new A("CompoundFork"));class S{constructor(e){n(this,"id",d.uuid());n(this,"className",d.classFromObject(this));n(this,"surroundScopeId",null);n(this,"testExpression",null);n(this,"testType",L.Logical);n(this,"pathIdList",[]);n(this,"description",null);n(this,"comment",null);s.checkArgumentType(e,"obj",Object),s.checkArgumentType(e.surroundScopeId,"obj.surroundScopeId","string"),s.checkArgumentTypeIfExists(e.testExpression,"obj.testExpression",p),s.checkArgumentTypeIfExists(e.pathIdList,"obj.pathIdList","string",s.ARRAY),s.checkArgumentTypeIfExists(e.description,"obj.description","string"),Object.assign(this,e)}static reviver(e,t){if(t===null||t.className===null)return t;switch(t.className){case"Declaration":return new oe(t);case"Assignment":return new Te(t);case"Invocation":return new Oe(t);case"Input":return new Ee(t);case"Output":return new ve(t);case"Start":return new pe(t);case"Return":return new de(t);case"IfElse":return new ge(t);case"Case":return new Ce(t);case"For":return new Re(t);case"ForEach":return new Fe(t);case"While":return new je(t);case"DoWhile":return new Ne(t);case"Break":return new De(t);case"Continue":return new ze(t);case"Boundary":return new ye(t);default:return t}}static parse(e){return JSON.parse(e,d.pipeRevivers(L.reviver,p.reviver,l.reviver,S.reviver))}}class x{constructor(e){n(this,"id",d.uuid());n(this,"enabled",!0);n(this,"case",null);n(this,"prevStatementId",null);n(this,"nextStatementId",null);s.checkArgumentType(e,"obj",Object),s.checkArgumentTypeIfExists(e.enabled,"obj.enabled","boolean"),s.checkArgumentTypeIfExists(e.case,"obj.case",p),s.checkArgumentType(e.prevStatementId,"obj.prevStatementId","string"),s.checkArgumentType(e.nextStatementId,"obj.nextStatementId","string"),Object.assign(this,e)}static reviver(e,t){return t!==null&&t.nextStatementId!==void 0?new x(t):t}static parse(e){return JSON.parse(e,d.pipeRevivers(p.reviver,x.reviver))}static get DISABLED(){return!1}}class p{constructor(e){n(this,"anExpression",null);s.checkArgumentType(e,"anExpression","string"),this.anExpression=e}static reviver(e,t){return t!==null&&t.anExpression!==void 0?new p(t.anExpression):t}}const C=class{constructor(e){n(this,"type");this.type=e}static reviver(e,t){return e==="testType"?new C(t.type):t}};let L=C;n(L,"Logical",new C("Logical")),n(L,"Discrete",new C("Discrete"));class q extends S{constructor(t){super(t);n(this,"variableIdList",[]);n(this,"expressionList",[]);s.checkArgumentCardinality(t.testExpression,"obj.testExpression",c.Zero),s.checkArgumentCardinality(t.pathIdList,"obj.pathIdList",c.One),Object.assign(this,t)}}class oe extends q{constructor(e){super(e),s.checkArgumentType(e.variableIdList,"obj.variableIdList","string",s.ARRAY),s.checkArgumentCardinality(e.variableIdList,"obj.variableIdList",c.AtLeastOne),s.checkArgumentType(e.expressionList,"obj.expressionList",p,s.ARRAY,s.ALLOWNULLS),s.checkArgumentCardinality(e.expressionList,"obj.expressionList",c.AtLeastOne),s.checkGeneralCondition(((t,r)=>t.length===r.length)(e.variableIdList,e.expressionList),"Incongruent sizes: variableIdList and expressionList should have the same size.")}}class Te extends q{constructor(e){super(e),s.checkArgumentType(e.variableIdList,"obj.variableIdList","string",s.ARRAY),s.checkArgumentCardinality(e.variableIdList,"obj.variableIdList",c.AtLeastOne),s.checkArgumentType(e.expressionList,"obj.expressionList",p,s.ARRAY),s.checkArgumentCardinality(e.expressionList,"obj.expressionList",c.AtLeastOne),s.checkGeneralCondition(((t,r)=>t.length===r.length)(e.variableIdList,e.expressionList),"Incongruent sizes: variableIdList and expressionList should have the same size.")}}class Oe extends q{constructor(e){super(e),s.checkArgumentCardinality(e.variableIdList,"obj.variableIdList",c.Zero),s.checkArgumentType(e.expressionList,"obj.expressionList",p,s.ARRAY),s.checkArgumentCardinality(e.expressionList,"obj.expressionList",c.One)}}class ue extends q{}class Ee extends ue{constructor(e){super(e),s.checkArgumentType(e.variableIdList,"obj.variableIdList","string",s.ARRAY),s.checkArgumentCardinality(e.variableIdList,"obj.variableIdList",c.AtLeastOne),s.checkArgumentCardinality(e.expressionList,"obj.expressionList",c.Zero)}}class ve extends ue{constructor(e){super(e),s.checkArgumentCardinality(e.variableIdList,"obj.variableIdList",c.Zero),s.checkArgumentType(e.expressionList,"obj.expressionList",p,s.ARRAY),s.checkArgumentCardinality(e.expressionList,"obj.expressionList",c.AtLeastOne)}}class le extends S{constructor(e){super(e),s.checkArgumentCardinality(e.testExpression,"obj.testExpression",c.Zero)}}class pe extends le{constructor(e){super(e),s.checkArgumentCardinality(e.pathIdList,"obj.pathIdList",c.One)}}class de extends le{constructor(t){super(t);n(this,"expression",null);s.checkArgumentCardinality(t.pathIdList,"obj.pathIdList",c.Zero),s.checkArgumentTypeIfExists(t.expression,"obj.expression",p),this.expression=t.expression}}class he extends S{constructor(t){super(t);n(this,"relatedId",null);n(this,"scopeId",null);s.checkArgumentType(t.relatedId,"obj.relatedId","string"),s.checkArgumentType(t.scopeId,"obj.scopeId","string"),Object.assign(this,t)}}class me extends he{constructor(e){super(e),s.checkArgumentCardinality(e.testExpression,"obj.testExpression",c.One)}}class ge extends me{constructor(e){super(e),s.checkArgumentCardinality(e.pathIdList,"obj.pathIdList",c.Two)}}class Ce extends me{constructor(e){super(e),s.checkArgumentCardinality(e.pathIdList,"obj.pathIdList",c.AtLeastTwo),this.testType=L.Discrete}}class K extends he{constructor(e){super(e),s.checkArgumentCardinality(e.pathIdList,"obj.pathIdList",c.Two)}}class Re extends K{constructor(t){super(t);n(this,"declarationId",null);n(this,"assignmentId",null);s.checkArgumentCardinality(t.testExpression,"obj.testExpression",c.One),s.checkArgumentType(t.declarationId,"obj.declarationId","string"),s.checkArgumentType(t.assignmentId,"obj.assignmentId","string"),Object.assign(this,t)}}class Fe extends K{constructor(t){super(t);n(this,"declarationId",null);n(this,"collection",null);s.checkArgumentCardinality(t.testExpression,"obj.testExpression",c.Zero),s.checkArgumentType(t.declarationId,"obj.declarationId","string"),s.checkArgumentType(t.collection,"obj.collection",O),Object.assign(this,t)}}class je extends K{constructor(e){super(e),s.checkArgumentCardinality(e.testExpression,"obj.testExpression",c.One)}}class Ne extends K{constructor(e){super(e),s.checkArgumentCardinality(e.testExpression,"obj.testExpression",c.One)}}class fe extends S{constructor(e){super(e),s.checkArgumentCardinality(e.testExpression,"obj.testExpression",c.One),s.checkArgumentCardinality(e.pathIdList,"obj.pathIdList",c.Two)}}class De extends fe{}class ze extends fe{}class ye extends S{constructor(t){super(t);n(this,"relatedId",null);s.checkArgumentCardinality(t.testExpression,"obj.testExpression",c.Zero),s.checkArgumentCardinality(t.pathIdList,"obj.pathIdList",c.One),Object.assign(this,t)}}class Pe{constructor(e){n(this,"id",d.uuid());n(this,"name",null);n(this,"scopeId",null);n(this,"functionIdList",[]);s.checkArgumentType(e,"obj",Object),s.checkArgumentType(e.name,"obj.name","string"),s.checkArgumentType(e.scopeId,"obj.scopeId","string"),s.checkArgumentType(e.functionIdList,"obj.functionIdList","string",s.ARRAY),s.checkArgumentCardinality(e.functionIdList,"obj.functionIdList",c.AtLeastOne),Object.assign(this,e)}}class We{createApplication(e,t){const r=new b({scopeType:m.Application}),i=new b({scopeType:m.Function,parentScopeId:r.id}),o=new de({surroundScopeId:i.id}),u=new x({prevStatementId:"temp",nextStatementId:o.id}),g=new pe({surroundScopeId:i.id,pathIdList:[u.id]});u.prevStatementId=g.id;const f=new X({name:t,startStatementId:g.id,scopeId:i.id,isMain:X.MAIN});return{application:new Pe({name:e,scopeId:r.id,functionIdList:[f.id]}),appScope:r,funcScope:i,mainFunc:f,startStmt:g,returnStmt:o,path:u}}createDeclarationStatement(e,t,r,i){const o=l.create(r.category,r.type1,r.type2),u=new ce({name:r.name,dataType:o}),g=i!==void 0?new p(i):null,f=new x({prevStatementId:"temp",nextStatementId:e.nextStatementId}),h=new oe({surroundScopeId:t.id,pathIdList:[f.id],variableIdList:[u.id],expressionList:[g]});return f.prevStatementId=h.id,e.nextStatementId=h.id,t.symbolMap[u.name]=u,{variable:u,declarationStmt:h,newPath:f,path:e}}createIfElseStatement(e,t,r){const i=new b({scopeType:m.CompoundFork,parentScopeId:t.id}),o=r!==void 0?new p(r):null,u=new x({case:new p("true"),prevStatementId:"temp",nextStatementId:"temp"}),g=new x({case:new p("false"),prevStatementId:"temp",nextStatementId:"temp"}),f=new x({prevStatementId:"temp",nextStatementId:e.nextStatementId}),h=new ge({surroundScopeId:i.id,pathIdList:[u.id,g.id],testExpression:o,relatedId:"temp",scopeId:i.id}),v=new ye({surroundScopeId:t.id,pathIdList:[f.id],relatedId:h.id});return h.relatedId=v.id,f.prevStatementId=v.id,u.prevStatementId=h.id,u.nextStatementId=v.id,g.prevStatementId=h.id,g.nextStatementId=v.id,e.nextStatementId=h.id,{ifElseScope:i,ifElseStmt:h,auxStmt:v,truePath:u,falsePath:g,auxPath:f,path:e}}}class Me{constructor(){n(this,"info",{application:null,scope:[],function:[],variable:[],statement:[],path:[]});const e=new We,t=e.createApplication("DefaultApplication","MainFunction");this.info.application=t.application,this.info.scope.push(t.appScope),this.info.scope.push(t.funcScope),this.info.function.push(t.mainFunc),this.info.statement.push(t.startStmt),this.info.statement.push(t.returnStmt),this.info.path.push(t.path);const r=e.createDeclarationStatement(this.info.path.at(0),this.getSurroundScope(this.info.path.at(0)),{name:"firstName",category:"Primitive",type1:"String"},"Sashir");this.info.statement.push(r.declarationStmt),this.info.variable.push(r.variable),this.info.path[0]=r.path,this.info.path.push(r.newPath);const i=e.createIfElseStatement(this.info.path.at(1),this.getSurroundScope(this.info.path.at(1)),"firstName === 'Samir'");this.info.scope.push(i.ifElseScope),this.info.statement.push(i.ifElseStmt),this.info.statement.push(i.auxStmt),this.info.path[1]=i.path,this.info.path.push(i.truePath),this.info.path.push(i.falsePath),this.info.path.push(i.auxPath)}getSurroundScope(e){const t=this.info.statement.find(i=>i.id===e.prevStatementId);return this.info.scope.find(i=>i.id===t.surroundScopeId)}}window.ProgramFlow=new Me;
